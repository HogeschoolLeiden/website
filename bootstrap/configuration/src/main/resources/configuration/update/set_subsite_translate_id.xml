<?xml version="1.0" encoding="UTF-8"?>
<sv:node xmlns:sv="http://www.jcp.org/jcr/sv/1.0" sv:name="Set subsite translate id">
  <sv:property sv:name="jcr:primaryType" sv:type="Name">
    <sv:value>hipposys:updaterinfo</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:batchsize" sv:type="Long">
    <sv:value>10</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:dryrun" sv:type="Boolean">
    <sv:value>false</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:path" sv:type="String">
    <sv:value>/content/documents/NEW_SUBSITE_NAME</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:script" sv:type="String">
    <sv:value>package org.hippoecm.frontend.plugins.cms.dev.updater&#xd;
&#xd;
import org.onehippo.repository.update.BaseNodeUpdateVisitor&#xd;
import javax.jcr.Node&#xd;
&#xd;
class UpdaterTemplate extends BaseNodeUpdateVisitor {&#xd;
&#xd;
&#xd;
  //  change the last segment of parameter path, defined above&#xd;
  //  to the root folder of the created subsite &#xd;
  //  Example root folders: biodiversiteit, expertisecentrum-jeugd, hsl-en, ...&#xd;
  &#xd;
  &#xd;
  boolean doUpdate(Node node) throws RepositoryException {&#xd;
        &#xd;
        if(node.getPrimaryNodeType().getName().equals("hippo:handle")){&#xd;
            addTranslationIdToDocument(node);&#xd;
        }else if (node.getPrimaryNodeType().getName().equals("hippostd:folder")){&#xd;
           if(node.getProperty("hippotranslation:id").getString().isEmpty()){  &#xd;
             String uuid = UUID.randomUUID().toString();&#xd;
             node.setProperty("hippotranslation:id", uuid);&#xd;
             log.debug("set translation uuid: " + uuid + " to folder: " + node.getPath());&#xd;
           }else{&#xd;
             log.debug(node.getPath() + "translation id has already been set. SKIPPING IT ");&#xd;
           }&#xd;
        }&#xd;
        &#xd;
        return false;&#xd;
    }&#xd;
&#xd;
   void addTranslationIdToDocument(Node node) throws RepositoryException {&#xd;
        NodeIterator childNodes = node.getNodes();&#xd;
        String uuid = UUID.randomUUID().toString();&#xd;
        &#xd;
        while(childNodes.hasNext()){&#xd;
          Node childNode = childNodes.nextNode();&#xd;
           if(childNode.getName().equals(node.getName())){&#xd;
              if(childNode.getProperty("hippotranslation:id").getString().isEmpty()){&#xd;
              &#xd;
                checkoutIfCheckedIn(childNode);&#xd;
                childNode.setProperty("hippotranslation:id", uuid);&#xd;
                log.debug("set translation uuid: " + uuid + " to document node " + childNode.getPath());&#xd;
              &#xd;
              }else{&#xd;
                log.debug(node.getPath() + "translation id has already been set. SKIPPING IT ");&#xd;
              }&#xd;
           }&#xd;
        }&#xd;
        &#xd;
    }&#xd;
  &#xd;
  void checkoutIfCheckedIn(Node node) throws RepositoryException {&#xd;
       if(!node.isCheckedOut()){&#xd;
           node.checkout();&#xd;
       }&#xd;
        &#xd;
    }&#xd;
&#xd;
  boolean undoUpdate(Node node) {&#xd;
    throw new UnsupportedOperationException('Updater does not implement undoUpdate method')&#xd;
  }&#xd;
&#xd;
}</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:throttle" sv:type="Long">
    <sv:value>10</sv:value>
  </sv:property>
</sv:node>
